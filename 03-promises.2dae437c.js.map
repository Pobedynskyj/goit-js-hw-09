{"mappings":"qhBAuCA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAtCF,CACTQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAmBC,GACjBA,EAAMC,iBACN,IAAIC,EAAYC,OAAOH,EAAMI,cAAc,GAAGC,OAC1CC,EAAWH,OAAOH,EAAMI,cAAc,GAAGC,OACzCE,EAAaJ,OAAOH,EAAMI,cAAc,GAAGC,OAE/C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAa,EAAGC,GAAK,EACxCtB,EAAcsB,EAAI,EAAGN,EAAYI,EAAWE,GACzCC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,IAInD2B,QAAQC,IAAId,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix, { Notify } from 'notiflix';\n\n// let form = document.querySelector('.form');\n\n// form.addEventListener('submit', onSubmit);\n\n// function onSubmit(event) {\n//   event.preventDefault();\n//   let delayEl = event.currentTarget[0].value;\n//   let stepEl = event.currentTarget[1].value;\n//   let amountEl = event.currentTarget[2].value;\n\n//   for (let i = 0; i <= amountEl; i++) {\n//     createPromise(i + 0, delayEl + stepEl * i)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\nimport Notiflix from 'notiflix';\nlet refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSub);\n\nfunction onFormSub(event) {\n  event.preventDefault();\n  let formDelay = Number(event.currentTarget[0].value);\n  let formStep = Number(event.currentTarget[1].value);\n  let formAmount = Number(event.currentTarget[2].value);\n\n  for (let i = 0; i <= formAmount - 1; i += 1) {\n    createPromise(i + 1, formDelay + formStep * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    console.log(formDelay);\n    // formDelay += formStep\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","formDelay","Number","currentTarget","value","formStep","formAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.2dae437c.js.map"}